# Rime schema
# encoding: utf-8

schema:
  schema_id: xhup
  name: 小鶴音形
  version: "2018.9.18.0"
  author:
    - xhup by 鶴
    - Rime schema by Zhaosheng Pan <zhaosheng.pan@sololand.moe>
  description: |
    小鶴雙拼音形方案
    四键自动上屏
  dependencies:
    - flypydz

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    # reset: 1
    states: [ 汉字, 漢字 ]
  - name: ascii_punct
    states: [ 。，, ．， ]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - table_translator
  filters:
    - simplifier
    - uniquifier

speller:
  alphabet: 'zyxwvutsrqponmlkjihgfedcba#'
  #initials: ';'
  finals: '#'
  delimiter: " '"
  max_code_length: 4
  auto_select: true
  auto_select_pattern: ^;.$|^\w{4}$
  auto_select_unique_candidate: true
  auto_clear: max_length

translator:
  dictionary: flypy
  enable_charset_filter: false
  enable_encoder: false
  enable_sentence: false
  encode_commit_history: false
  enable_completion: false
  enable_user_dict: false
  max_phrase_length: 14
  disable_user_dict_for_patterns:
    - "^z.*$"
    - "^oi.*$"

reverse_lookup:
  dictionary: flypydz
  prefix: "oi"
  suffix: "'"
  tips: 〔拼音〕
  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/

simplifier:
  option_name: simplification
  opencc_config: s2t.json

punctuator:
  import_preset: symbols

key_binder:
  import_preset: default
  bindings:
    - {accept: bracketleft, send: Page_Up, when: has_menu} # [上翻页
    - {accept: bracketright, send: Page_Down, when: has_menu} # ]下翻页
    - {accept: ";", send: 2, when: composing}
    - {accept: comma, send: 2, when: composing}
    - {accept: "Tab", send: Escape, when: composing}
    - {accept: Release+semicolon, send: semicolon, when: composing}
    - {accept: Release+comma, send: comma, when: composing}

recognizer:
  import_preset: default
  patterns:
    punct: "^/([0-9]0?|[a-z]+)$"
    reverse_lookup: "oi[a-z]*'?$"
